<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions xmlns:ns="http://www.northgateps.com/RSTS/GetTaxReliefTypes" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://www.northgateps.com/RSTS/GetTaxReliefTypes.wsdl" targetNamespace="http://www.northgateps.com/RSTS/GetTaxReliefTypes.wsdl">
	<wsdl:types>
		<xsd:schema xmlns="http://northgate-is.com/FL/Core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://northgate-is.com/FL/Core" elementFormDefault="qualified" attributeFormDefault="unqualified">
			<xsd:complexType name="PersonNameType">
				<xsd:sequence>
					<xsd:element name="Title" minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:maxLength value="10"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="Forename">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:maxLength value="50"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="Othername" minOccurs="0">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:maxLength value="100"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="Surname">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:maxLength value="50"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:simpleType name="YesNoType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="yes"/>
					<xsd:enumeration value="no"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:complexType name="AddressType">
				<xsd:sequence>
					<xsd:element name="AddressLine1" type="xsd:string" minOccurs="0"/>
					<xsd:element name="AddressLine2" type="xsd:string" minOccurs="0"/>
					<xsd:element name="AddressLine3" type="xsd:string" minOccurs="0"/>
					<xsd:element name="AddressLine4" type="xsd:string" minOccurs="0"/>
					<xsd:element name="AddressTownOrCity" type="xsd:string" minOccurs="0"/>
					<xsd:element name="AddressCountyOrRegion" type="xsd:string" minOccurs="0"/>
					<xsd:element name="AddressPostcodeOrZip" type="xsd:string" minOccurs="0"/>
					<xsd:element name="AddressCountryCode" type="xsd:string" minOccurs="0"/>
					<xsd:element name="QASMoniker" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>QAS unique reference for the address</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:simpleType name="SeverityType">
				<xsd:annotation>
					<xsd:documentation>Severity Type (for message) - error,validation,warning,information. Note that validation messages should be treated as error messages</xsd:documentation>
				</xsd:annotation>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="ERR"/>
					<xsd:enumeration value="VAL"/>
					<xsd:enumeration value="WAR"/>
					<xsd:enumeration value="INF"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:complexType name="MessageStructure">
				<xsd:annotation>
					<xsd:documentation>Common Structure for returning a message in the response.The logical data item, row and InLineText are used for in-line errors, ifthe logical data item is not present on the page then it is treated as a norma error, the the standard text is used if the in-line text is not present</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name="Text" type="xsd:string"/>
					<xsd:element name="Severity" type="SeverityType" minOccurs="0"/>
					<xsd:element name="Code" type="xsd:string" minOccurs="0"/>
					<xsd:element name="LogicalDataItem" type="xsd:string" minOccurs="0"/>
					<xsd:element name="Row" type="xsd:string" minOccurs="0"/>
					<xsd:element name="InLineText" type="xsd:string" minOccurs="0"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name="MessagesStructure">
				<xsd:annotation>
					<xsd:documentation>Common Structure for returning a multiple messages in the response</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name="Message" type="MessageStructure" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name="StandardResponseStructure">
				<xsd:annotation>
					<xsd:documentation>Common Response structure for returning a success or failure and optional messages</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name="Success" type="xsd:boolean"/>
					<xsd:element name="Fatal" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Optional tag set to true if there is fatal error, this means there has been an oracle error</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Messages" type="MessagesStructure" minOccurs="0"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name="StandardTextTranslationStructure">
				<xsd:annotation>
					<xsd:documentation>Common Response structure for returning foriegn language translations</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name="Translation" maxOccurs="unbounded">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="Language" type="xsd:string"/>
								<xsd:element name="Text" type="xsd:string"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name="StandardRequestStructure">
				<xsd:annotation>
					<xsd:documentation>Common Request structure for passing standard information in the request, currently used just to set language</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name="LanguageCode" type="xsd:string" minOccurs="0"/>
					<xsd:element name="Service" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>An example service is the name of the requesting system, e.g. RB or the database from which the request is coming from, e.g. RBDEV</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Requestor" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>An example requestor is the name of the Local Authority from which the request is being sent</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xs:schema xmlns="http://www.northgateps.com/RSTS/GetTaxReliefTypes" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:core="http://northgate-is.com/FL/Core" targetNamespace="http://www.northgateps.com/RSTS/GetTaxReliefTypes" elementFormDefault="qualified" attributeFormDefault="unqualified">
			<xs:import namespace="http://northgate-is.com/FL/Core" />
			<xs:element name="GetTaxReliefTypesRequest">
				<xs:annotation>
					<xs:documentation>This API for tax relief types</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Service" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Service code for tax relief type, this is
							optional and if not provided will return the data for all
							services</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CurrentOnly" type="core:YesNoType">
							<xs:annotation>
								<xs:documentation>List records who are current now
						</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="GetTaxReliefTypesResponse">
				<xs:annotation>
					<xs:documentation>Response tax relief types</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="core:StandardResponseStructure">
							<xs:sequence>
								<xs:element name="ReliefTypes" minOccurs="0">
									<xs:complexType>
										<xs:sequence>
											<xs:element name="ReliefType" maxOccurs="unbounded">
												<xs:complexType>
													<xs:sequence>
														<xs:element name="Type" type="xs:string">
															<xs:annotation>
																<xs:documentation>Tax relief type code identifies the particular relief type</xs:documentation>
															</xs:annotation>
														</xs:element>
														<xs:element name="Service" type="xs:string">
															<xs:annotation>
																<xs:documentation>Service code for tax relief type</xs:documentation>
															</xs:annotation>
														</xs:element>
														<xs:element name="Description" type="xs:string">
															<xs:annotation>
																<xs:documentation>Description of this relief type</xs:documentation>
															</xs:annotation>
														</xs:element>
														<xs:element name="CurrentInd" type="core:YesNoType">
															<xs:annotation>
																<xs:documentation>Is this relief type currently in use</xs:documentation>
															</xs:annotation>
														</xs:element>
														<xs:element name="TransactionType" type="xs:string" minOccurs="0">
															<xs:annotation>
																<xs:documentation>Transaction type to be used for this relief type when creating a transaction</xs:documentation>
															</xs:annotation>
														</xs:element>
														<xs:element name="TransactionService" type="xs:string" minOccurs="0">
															<xs:annotation>
																<xs:documentation>Service code for the transaction type</xs:documentation>
															</xs:annotation>
														</xs:element>
														<xs:element name="TransactionWorkRefno" type="xs:string" minOccurs="0">
															<xs:annotation>
																<xs:documentation>Link to the workplace for the transaction type</xs:documentation>
															</xs:annotation>
														</xs:element>
														<xs:element name="Class" minOccurs="0">
															<xs:annotation>
																<xs:documentation>Indicates what taxes this relief type is applicable to e.g. Standard or ADS</xs:documentation>
															</xs:annotation>
															<xs:simpleType>
																<xs:restriction base="xs:string">
																	<xs:enumeration value="ADS"/>
																	<xs:enumeration value="STANDARD"/>
																</xs:restriction>
															</xs:simpleType>
														</xs:element>
														<xs:element name="UpperLimit" type="xs:integer" minOccurs="0">
															<xs:annotation>
																<xs:documentation>The maximum amount for this relief type</xs:documentation>
															</xs:annotation>
														</xs:element>
														<xs:element name="FullReliefInd" type="core:YesNoType" minOccurs="0">
															<xs:annotation>
																<xs:documentation>Does this relief cover the full amount of tax</xs:documentation>
															</xs:annotation>
														</xs:element>
														<xs:element name="ReturnTypes" type="xs:string" minOccurs="0">
															<xs:annotation>
																<xs:documentation>The specific list of return types (if any) that this relief is for, list separated by a colon</xs:documentation>
															</xs:annotation>
														</xs:element>
													</xs:sequence>
												</xs:complexType>
											</xs:element>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:schema>
	</wsdl:types>
	<wsdl:message name="GetTaxReliefTypesRequest">
		<wsdl:part name="parameters" element="ns:GetTaxReliefTypesRequest"/>
	</wsdl:message>
	<wsdl:message name="GetTaxReliefTypesResponse">
		<wsdl:part name="parameters" element="ns:GetTaxReliefTypesResponse"/>
	</wsdl:message>
	<wsdl:portType name="GetTaxReliefTypesWSDLPort">
		<wsdl:operation name="GetTaxReliefTypesWSDL">
			<wsdl:input message="tns:GetTaxReliefTypesRequest"/>
			<wsdl:output message="tns:GetTaxReliefTypesResponse"/>
		</wsdl:operation>
	</wsdl:portType>
	<wsdl:binding name="GetTaxReliefTypesWSDLBinding" type="tns:GetTaxReliefTypesWSDLPort">
		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
		<!-- Define document style -->
		<!-- define literal -->
		<wsdl:operation name="GetTaxReliefTypesWSDL">
			<soap:operation soapAction="https://server/DATABASE/communication/GetTaxReliefTypes"/>
			<wsdl:input>
				<soap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
	</wsdl:binding>
	<wsdl:service name="GetTaxReliefTypesWSDLService">
		<wsdl:port name="GetTaxReliefTypesWSDLPort" binding="tns:GetTaxReliefTypesWSDLBinding">
			<soap:address location="https://server/DATABASE/communication/GetTaxReliefTypes"/>
			<!-- give the binding an network address -->
		</wsdl:port>
	</wsdl:service>
</wsdl:definitions>
