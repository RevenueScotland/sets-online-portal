<% content_for(:page_title, t('.title')) %>
<% if @site_summary_save_reference.present? %>
  <%= ds_notification_panel(title: t('.return_saved'), reference:  @site_summary_save_reference, success: true, header: false) do %>
    <%= ds_paragraph{t('.information')} %>
  <% end %>
<% end %>
<%# See the {#waste.<=>} to learn more about how the sorting works for @site.wastes&.values.sort %>
<%# See also export_waste_csv_data as the sorts need to be the same %>
<%= ds_table(caption: tag.h2(t('.subtitle' ,site_name: @site.site_name ), class: 'ds_!_margin-bottom--0'), id: 'site_waste') do |table| %>
  <% table.with_link(name: t('.add_new_waste_type'),url: returns_slft_waste_description_path(waste: 'new')) %>
  <% table.with_header(klass: Returns::Slft::Waste) do |header| %>
    <% header.with_cell(method: :ewc_code) %>
    <% header.with_cell(method: :lower_tonnage_display) %>
    <% header.with_cell(method: :standard_tonnage_display)%>
    <% header.with_cell(method: :exempt_tonnage_display)%>
    <% header.with_cell(method: :water_tonnage_display)%>
    <% header.with_cell(method: :total_tonnage)%>
  <% end %>
  <% @site.wastes&.values.sort&.each do |waste| %>
    <% table.with_row(model: waste) do |row| %>
      <% row.with_cell(method: :ewc_code_and_description) %>
      <% row.with_cell(method: :lower_tonnage_display)%>
      <% row.with_cell(method: :standard_tonnage_display)%>
      <% row.with_cell(method: :exempt_tonnage_display) %>
      <% row.with_cell(method: :water_tonnage_display) %>
      <% row.with_cell(method: :total_tonnage) %>
    <% end %>
    <% table.with_row do |row| %>
      <% row.with_cell(colspan: 6) do %>
        <%= ds_link(name: t('.edit_row'), url: returns_slft_waste_description_path(waste: waste), subtype: :padded,
        visually_hidden_text: t('.hidden_text', ewc_code: waste.ewc_code_and_description)) %>
        <%= ds_link(name: t('.delete_row'), url: returns_waste_path(waste: waste), delete: true, confirm_message: t('.delete' , value: waste.ewc_code_and_description ), subtype: :padded,
        visually_hidden_text: t('.hidden_text', ewc_code: waste.ewc_code_and_description)) %>
      <% end %>
    <% end %>
  <% end %>
<% end %>
<%= ds_paragraph {ds_link(name: t('.delete_all_waste_types'), url: returns_slft_site_waste_summary_path(site: @site),
                          delete: true, confirm_message: t('.delete_all'))} %>
<%= ds_form_with(model: @site, url: returns_slft_site_waste_summary_path(site: @site),
                 file_upload: true, method: :post, 
                 button_action: :none) do |f| %>
  <%= f.rs_file_upload(resource_items_hash: @resource_items_hash, resource_items: @resource_items, multiple: false, optional: true,
                     description: false,  supported_file_types: @supported_types, max_file_size_mb: @supported_max_size_mb) %>
  <% if can?(RS::AuthorisationHelper::SLFT_SAVE) %>
    <%= f.ds_submit(button_action: 'save_draft', button_label: t('.save_draft'), type: :secondary) %>
  <% end %>
  <%= ds_button(name: t('.return_summary'), url: returns_slft_summary_path) %>
<% end %>
